---
title: "My First Quarto Presentation"
author: "Jiayu Ban"
date: "2025-10-12"
format:
  pptx:
    slide-level: 1
    aspect-ratio: 16:9
    incremental: true
  revealjs:
    slide-number: true
    theme: simple
    transition: fade
    incremental: true
    aspect-ratio: 16:9
---
# Introduction

Welcome to **Quarto Presentations**!

In this presentation, we’ll learn how to:

* Write documents in Markdown

* Add code chunks and results

* Generate dynamic presentations
---

# What is Quarto?
Quarto allows you to **mix text, code, and outputs** in a single document.

It supports multiple output formats, including:

1. HTML webpages

2. PDF reports

3. Microsoft Word

4. PowerPoint presentations

5. Reveal.js slides
---

# Markdown Basics
Markdown uses simple symbols for formatting:

* ***text*** → italics

* **text** → bold

* **#** → headings

* * or **-** → bullet points

* **1.** → numbered lists

---

## Example: Lists and subitems
1. Item 1
2. Item 2
    + Subitem A
    + Subitem B

---

# Using Python Code in Quarto
Let’s demonstrate how we can mix text and Python code in one presentation.

---

## Example 1: Generate Random Data
```{python}
import numpy as np
import pandas as pd

# Generate 1000 random values from a standard normal distribution
a = np.random.normal(size=1000)

# Use pandas to get a summary
summary = pd.Series(a).describe()
print(summary)
```
---

## Example 2: Show a Simple Table
```{python}
# Create a simple DataFrame
data = pd.DataFrame({
    "Year": [2020, 2021, 2022, 2023, 2024],
    "Revenue": [120, 150, 180, 210, 260]
})
data
```
---

## Example 3: Plot with Matplotlib
```{python}
import matplotlib.pyplot as plt

plt.plot(data["Year"], data["Revenue"], marker="o", color="darkblue")
plt.title("Company Revenue Growth (2020–2024)")
plt.xlabel("Year")
plt.ylabel("Revenue (in million USD)")
plt.grid(True, linestyle='--', linewidth=0.5)
plt.tight_layout()
plt.show()
```
---

## Example 4: Simulated Financial Data
```{python}
# Simulate stock prices with a random walk model
np.random.seed(42)

dates = pd.date_range("2024-01-01", "2024-12-31", freq="B")  # Business days
n = len(dates)
returns = np.random.normal(0, 0.01, n)
price = 150 + np.cumsum(returns)  # Start at 150 USD

stock = pd.DataFrame({
    "Date": dates,
    "Price": price
})
stock.tail()
```
---

## Example 5: Plot Simulated Prices
```{python}
plt.figure(figsize=(8, 4))
plt.plot(stock["Date"], stock["Price"], color="green")
plt.title("Simulated Stock Price (2024)")
plt.xlabel("Date")
plt.ylabel("Price (USD)")
plt.grid(True, linestyle="--", linewidth=0.5)
plt.tight_layout()
plt.show()
```

### Inline Results Example
You can display **computed values directly in text**.
```{python}
#| echo: false
latest_date = stock["Date"].iloc[-1].date()
latest_price = float(round(stock["Price"].iloc[-1], 2))
```
On `{python} latest_date`, the simulated stock closed at `{python} latest_price` USD.
---
# Math Example
You can also include formulas using LaTeX syntax:

$y_t = \alpha_0 + \phi_1 x_t + \epsilon_t$
---

# Summary
* In this presentation, we learned how to:
* Write Markdown text
* Embed Python code
* Create plots and tables
* Generate dynamic presentations in PowerPoint and HTML
